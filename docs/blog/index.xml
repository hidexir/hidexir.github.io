<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on hidexir</title>
    <link>https://hidexir.github.io/blog/</link>
    <description>Recent content in Blogs on hidexir</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 10 Nov 2020 01:14:24 +0900</lastBuildDate><atom:link href="https://hidexir.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>パケットから見るGoとMySQL</title>
      <link>https://hidexir.github.io/blog/2020-11-10/</link>
      <pubDate>Tue, 10 Nov 2020 01:14:24 +0900</pubDate>
      
      <guid>https://hidexir.github.io/blog/2020-11-10/</guid>
      <description>はじめに あるひ割と大きなデーター処理をするバッチ基盤を作っていた時にMySQLのプロトコルがきになったのでそれについてのメモです。
環境 graph TD; Client(Go)--MySQL; MySQL--Client(Go);  上記の通信内容のキャプチャをしました。
調査内容 package main import ( &amp;#34;log&amp;#34; ) var ( id int name string ) rows, err := db.Query(&amp;#34;SELECT id, name FROM users WHERE id = ?&amp;#34;, 1) if err != nil { log.Fatal(err) } defer rows.Close() for rows.Next() { err := rows.Scan(&amp;amp;id, &amp;amp;name) if err != nil { log.Fatal(err) } log.Println(id, name) } err = rows.Err() if err != nil { log.</description>
    </item>
    
  </channel>
</rss>
